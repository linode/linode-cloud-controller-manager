# yaml-language-server: $schema=https://raw.githubusercontent.com/kyverno/chainsaw/main/.schemas/json/test-chainsaw-v1alpha1.json
apiVersion: chainsaw.kyverno.io/v1alpha1
kind: Test
metadata:
  name: lb-updated-with-nb-id
  labels:
    all:
    lke:
spec:
  namespace: "lb-updated-with-nb-id"
  steps:
    - name: Create pods and services
      try:
        - apply:
            file: create-pods-services.yaml
      catch:
        - describe:
            apiVersion: v1
            kind: Pod
        - describe:
            apiVersion: v1
            kind: Service
    - name: Check that loadbalancer ip is assigned
      try:
      - assert:
          resource:
            apiVersion: v1
            kind: Service
            metadata:
              name: svc-test
            status:
              (loadBalancer.ingress[0].ip != null): true
    - name: Create nodebalancer, annotate svc with nodebalancer id and validate
      try:
        - script:
            timeout: 10m
            content: |
              set -e

              re='^[0-9]+$'
              LABEL="ccm-$(head /dev/urandom | tr -dc 'a-z0-9' | head -c 5)"

              # Get existing nodebalancer id
              old_nbid=$(KUBECONFIG=$KUBECONFIG NAMESPACE=$NAMESPACE LINODE_TOKEN=$LINODE_TOKEN ../scripts/get-nb-id.sh)

              # Get VPC config for the old nodebalancer if it exists
              vpcconfig=$(curl -s \
                -H "Authorization: Bearer $LINODE_TOKEN" \
                -H "Content-Type: application/json" \
                "$LINODE_URL/v4beta/nodebalancers/$old_nbid/vpcs")

              echo "Nodebalancer ID: $old_nbid"
              echo "VPC config: $vpcconfig"

              SUBNET_ID=$(echo $vpcconfig | jq -r ".data[] | select(.nodebalancer_id == $old_nbid) | .subnet_id")
              echo "Subnet ID: $SUBNET_ID"

              data="{\"label\": \"$LABEL\", \"region\": \"$REGION\", \"vpcs\": [{\"subnet_id\": $SUBNET_ID}]}"
              if [[ -z $SUBNET_ID ]]; then
                  data="{\"label\": \"$LABEL\", \"region\": \"$REGION\"}"
              fi

              nbid=$(curl -s --request POST \
                -H "Authorization: Bearer $LINODE_TOKEN" \
                -H "Content-Type: application/json" \
                -H "accept: application/json" \
                "$LINODE_URL/v4beta/nodebalancers" \
                --data "$data" | jq .id)

              if ! [[ $nbid =~ $re ]]; then
                  echo "Nodebalancer id [$nbid] for label [$lABEL] is incorrect, failed to create nodebalancer"
              else
                  kubectl annotate svc svc-test -n $NAMESPACE service.beta.kubernetes.io/linode-loadbalancer-nodebalancer-id=$nbid
                  sleep 5

                  for i in {1..20}; do
                      nbid2=$(KUBECONFIG=$KUBECONFIG NAMESPACE=$NAMESPACE LINODE_TOKEN=$LINODE_TOKEN ../scripts/get-nb-id.sh)

                      if [[ $nbid == $nbid2 ]]; then
                          echo "Condition met"
                          break
                      fi
                      echo "Condition not met, waiting for 20 seconds and retrying..."
                      echo "nbid: $nbid"
                      echo "nbid2: $nbid2"
                      sleep 20
                  done
              fi
            check:
              ($error == null): true
              (contains($stdout, 'Condition met')): true
