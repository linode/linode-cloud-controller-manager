# yaml-language-server: $schema=https://raw.githubusercontent.com/kyverno/chainsaw/main/.schemas/json/test-chainsaw-v1alpha1.json
apiVersion: chainsaw.kyverno.io/v1alpha1
kind: Test
metadata:
  name: lb-with-http-to-https
  labels:
    all:
    lke:
spec:
  namespace: "lb-with-http-to-https"
  steps:
    - name: Create pods and services
      try:
        - apply:
            file: create-pods-services.yaml
      catch:
        - describe:
            apiVersion: v1
            kind: Pod
        - describe:
            apiVersion: v1
            kind: Service
    - name: Create secrets
      try:
        - script:
            content: |
              set -e
              kubectl -n $NAMESPACE create secret tls tls-secret-1 --cert=../certificates/server.crt --key=../certificates/server.key
            check:
              ($error == null): true
    - name: Update service to have another annotation and port
      try:
        - script:
            content: |
              set -e
              kubectl annotate svc svc-test -n $NAMESPACE service.beta.kubernetes.io/linode-loadbalancer-port-443='{"tls-secret-name": "tls-secret-1", "protocol": "https"}'
              kubectl patch svc svc-test -n $NAMESPACE --type='json' -p='[{"op": "add", "path": "/spec/ports/-", "value": {"name": "https", "port": 443, "targetPort": 8080, "protocol": "TCP"}}]'
              sleep 10
            check:
              ($error == null): true
    - name: Check endpoints
      try:
      - assert:
          resource:
            apiVersion: v1
            kind: Endpoints
            metadata:
              name: svc-test
            (subsets[0].addresses != null): true
            (subsets[0].ports != null): true
            (length(subsets[0].ports)): 2
      catch:
        - describe:
            apiVersion: v1
            kind: Pod
        - describe:
            apiVersion: v1
            kind: Service
    - name: Check that loadbalancer ip is assigned
      try:
      - assert:
          resource:
            apiVersion: v1
            kind: Service
            metadata:
              name: svc-test
            status:
              (loadBalancer.ingress[0].ip != null): true
    - name: Fetch loadbalancer ip and check if pod reachable on different ports with different protocols
      try:
        - script:
            content: |
              set -e
              IP=$(kubectl get svc svc-test -n $NAMESPACE -o json | jq -r .status.loadBalancer.ingress[0].ip)

              for i in {1..10}; do
                  port_80=$(curl -s $IP:80 | grep "test-" || true)
                  port_443=$(curl --resolve linode.test:443:$IP --cacert ../certificates/ca.crt -s https://linode.test:443 | grep "test-" || true)

                  if [[ -z $port_80 || -z $port_443 ]]; then
                      sleep 20
                  else
                      echo "all pods responded"
                      break
                  fi
              done
            check:
              ($error == null): true
              (contains($stdout, 'all pods responded')): true
