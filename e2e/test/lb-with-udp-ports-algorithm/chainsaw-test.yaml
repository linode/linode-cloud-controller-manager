# yaml-language-server: $schema=https://raw.githubusercontent.com/kyverno/chainsaw/main/.schemas/json/test-chainsaw-v1alpha1.json
apiVersion: chainsaw.kyverno.io/v1alpha1
kind: Test
metadata:
  name: lb-with-udp-ports-algorithm
  labels:
    all:
    lke:
spec:
  namespace: "lb-with-udp-ports-algorithm"
  steps:
    - name: Create pods and services
      try:
        - apply:
            file: create-pods-services.yaml
      catch:
        - describe:
            apiVersion: v1
            kind: Pod
        - describe:
            apiVersion: v1
            kind: Service
    - name: Check that loadbalancer ip is assigned
      try:
      - assert:
          resource:
            apiVersion: v1
            kind: Service
            metadata:
              name: svc-test
            status:
              (loadBalancer.ingress[0].ip != null): true
    - name: Fetch nodebalancer config for port 7070
      try:
        - script:
            content: |
              set -e
              
              echo "Starting e2e test"

              nbid=$(KUBECONFIG=$KUBECONFIG NAMESPACE=$NAMESPACE LINODE_TOKEN=$LINODE_TOKEN ../scripts/get-nb-id.sh)

              echo "Nodebalancer ID: $nbid"

              for i in {1..5}; do
                  nbconfig=$(curl -sk \
                    -H "Authorization: Bearer $LINODE_TOKEN" \
                    -H "Content-Type: application/json" \
                    "$LINODE_URL/v4/nodebalancers/$nbid/configs" | jq '.data[] | select(.port == 7070)' || true )
                  if [[ ! -z $nbconfig ]]; then
                    echo "Nodebalancer config found, updating config algorithm"
                    break      
                  fi
                  echo "Failed fetching nodebalancer config for port 7070, retrying in 20 seconds"
                  sleep 20
              done
              
              config_id=$(echo $nbconfig | jq -r '.id')
              echo "$config_id"

              curl --request PUT \
                --url https://api.linode.com/v4beta/nodebalancers/$nbid/configs/$config_id \
                -H "Accept: application/json" \
                -H "Authorization: Bearer $LINODE_TOKEN" \
                -H "Content-Type: application/json" \
                --data '{"algorithm": "ring_hash"}'

            check:
              ($error == null): true

