# yaml-language-server: $schema=https://raw.githubusercontent.com/kyverno/chainsaw/main/.schemas/json/test-chainsaw-v1alpha1.json
apiVersion: chainsaw.kyverno.io/v1alpha1
kind: Test
metadata:
  name: lb-passive-health-check
  labels:
    all:
    lke:
spec:
  namespace: "lb-passive-health-check"
  steps:
    - name: Create pods and services
      try:
        - apply:
            file: create-pods-services.yaml
      catch:
        - describe:
            apiVersion: v1
            kind: Pod
        - describe:
            apiVersion: v1
            kind: Service
    - name: Check that loadbalancer ip is assigned
      try:
      - assert:
          resource:
            apiVersion: v1
            kind: Service
            metadata:
              name: svc-test
            status:
              (loadBalancer.ingress[0].ip != null): true
    - name: Fetch nodebalancer config for port 80
      try:
        - script:
            content: |
              set -e

              nbid=$(KUBECONFIG=$KUBECONFIG NAMESPACE=$NAMESPACE LINODE_TOKEN=$LINODE_TOKEN ../scripts/get-nb-id.sh)

              for i in {1..10}; do
                  nbconfig=$(curl -s \
                    -H "Authorization: Bearer $LINODE_TOKEN" \
                    -H "Content-Type: application/json" \
                    "https://api.linode.com/v4/nodebalancers/$nbid/configs" | jq '.data[] | select(.port == 80)' || true)

                  if [[ -z $nbconfig ]]; then
                      echo "Failed fetching nodebalancer config for port 80"
                  fi

                  port_80_check=$(echo $nbconfig | jq '.check == "none"')
                  port_80_passive=$(echo $nbconfig | jq '.check_passive == true')
                  port_80_up_nodes=$(echo $nbconfig | jq '(.nodes_status.up)|tonumber >= 2')

                  if [[ $port_80_check == "true" && $port_80_passive == "true" && $port_80_up_nodes == "true" ]]; then
                      echo "All conditions met"
                      break
                  fi
                  sleep 15
              done
            check:
              ($error == null): true
              (contains($stdout, 'All conditions met')): true
