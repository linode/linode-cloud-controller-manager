# yaml-language-server: $schema=https://raw.githubusercontent.com/kyverno/chainsaw/main/.schemas/json/test-chainsaw-v1alpha1.json
apiVersion: chainsaw.kyverno.io/v1alpha1
kind: Test
metadata:
  name: lb-with-udp-ports
  labels:
    all:
    lke:
spec:
  namespace: "lb-with-udp-ports"
  steps:
    - name: Create pods and services
      try:
        - apply:
            file: create-pods-services.yaml
      catch:
        - describe:
            apiVersion: v1
            kind: Pod
        - describe:
            apiVersion: v1
            kind: Service
    - name: Check that loadbalancer ip is assigned
      try:
      - assert:
          resource:
            apiVersion: v1
            kind: Service
            metadata:
              name: svc-test
            status:
              (loadBalancer.ingress[0].ip != null): true
    - name: Fetch nodebalancer config for port 7070
      try:
        - script:
            timeout: 10m
            content: |
              set -euo pipefail

              nbid=$(KUBECONFIG=$KUBECONFIG NAMESPACE=$NAMESPACE LINODE_TOKEN=$LINODE_TOKEN ../scripts/get-nb-id.sh)

              echo "Nodebalancer ID: $nbid"

              for i in {1..20}; do
                  nbconfig=$(LINODE_TOKEN=$LINODE_TOKEN NBID=$nbid ../scripts/get-nb-config.sh)
                  
                  if [[ -z $nbconfig ]]; then
                      echo "Failed fetching nodebalancer config for port 7070"
                  fi

                  port_7070_check=$(echo $nbconfig | jq '.check == "none"')
                  port_7070_interval=$(echo $nbconfig | jq '.check_interval == 5')
                  port_7070_timeout=$(echo $nbconfig | jq '.check_timeout == 3')
                  port_7070_attempts=$(echo $nbconfig | jq '.check_attempts == 2')
                  port_7070_protocol=$(echo $nbconfig | jq '.protocol == "udp"')
                  # TODO: Implement the actual check for UDP node health when support is added
                  # port_7070_up_nodes=$(echo $nbconfig | jq '(.nodes_status.up)|tonumber >= 2')
                  port_7070_up_nodes="true"

                  if [[ $port_7070_check == "true" && $port_7070_interval == "true" && $port_7070_timeout == "true" && $port_7070_attempts == "true" && $port_7070_protocol == "true" && $port_7070_up_nodes == "true" ]]; then
                      echo "All conditions met"
                      break
                  fi
                  echo "Conditions not met, retrying in 20 seconds..."
                  echo "check: $port_7070_check"
                  echo "interval: $port_7070_interval"
                  echo "timeout: $port_7070_timeout"
                  echo "attempts: $port_7070_attempts"
                  echo "protocol: $port_7070_protocol"
                  echo "up_nodes: $port_7070_up_nodes"
                  sleep 20
              done
            check:
              ($error == null): true
              (contains($stdout, 'All conditions met')): true
