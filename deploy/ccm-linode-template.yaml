apiVersion: v1
kind: Secret
metadata:
  name: ccm-linode
  namespace: kube-system
type: Opaque
data:
  # These template vars are Helm compatible
  apiToken: {{ .Values.apiTokenB64 }}
  region: {{ .Values.linodeRegionB64 }} 
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: ccm-linode
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: ccm-linode-clusterrole
rules:
- apiGroups: [""]
  resources: ["endpoints"]
  verbs: ["get", "watch", "list", "update", "create"]
- apiGroups: ["coordination.k8s.io"]
  resources: ["leases"]
  verbs: ["get", "watch", "list", "update", "create"]
- apiGroups: [""]
  resources: ["nodes"]
  verbs: ["get", "watch", "list", "update", "delete", "patch"]
- apiGroups: [""]
  resources: ["nodes/status"]
  verbs: ["get", "watch", "list", "update", "delete", "patch"]
- apiGroups: [""]
  resources: ["events"]
  verbs: ["get", "watch", "list", "update", "create", "patch"]
- apiGroups: [""]
  resources: ["persistentvolumes"]
  verbs: ["get", "watch", "list", "update"]
- apiGroups: [""]
  resources: ["secrets"]
  verbs: ["get"]
- apiGroups: [""]
  resources: ["services"]
  verbs: ["get", "watch", "list"]
- apiGroups: [""]
  resources: ["services/status"]
  verbs: ["get", "watch", "list", "update", "patch"]
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: ccm-linode-clusterrolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: ccm-linode-clusterrole
subjects:
- kind: ServiceAccount
  name: ccm-linode
  namespace: kube-system
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: ccm-linode
  labels:
    app: ccm-linode
  namespace: kube-system
spec:
  selector:
    matchLabels:
      app: ccm-linode
  template:
    metadata:
      labels:
        app: ccm-linode
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                - key: node-role.kubernetes.io/control-plane
                  operator: Exists
      securityContext:
        seccompProfile:
          type: RuntimeDefault
      serviceAccountName: ccm-linode
      tolerations:
        # The CCM can run on Nodes tainted as masters
        - key: "node-role.kubernetes.io/control-plane"
          effect: "NoSchedule"
        # The CCM is a "critical addon"
        - key: "CriticalAddonsOnly"
          operator: "Exists"
        # This taint is set on all Nodes when an external CCM is used
        - key: node.cloudprovider.kubernetes.io/uninitialized
          value: "true"
          effect: NoSchedule
        - key: node.kubernetes.io/not-ready
          operator: Exists
          effect: NoSchedule
        - key: node.kubernetes.io/unreachable
          operator: Exists
          effect: NoSchedule
      hostNetwork: true
      containers:
        - image: linode/linode-cloud-controller-manager:latest
          imagePullPolicy: Always
          name: ccm-linode
          args:
          - --leader-elect-resource-lock=leases
          - --v=3
          - --secure-port=10253
          - --webhook-secure-port=0
          volumeMounts:
          - mountPath: /etc/kubernetes
            name: k8s
          env:
            - name: LINODE_API_TOKEN
              valueFrom:
                secretKeyRef:
                  name: ccm-linode
                  key: apiToken
            - name: LINODE_REGION
              valueFrom:
                secretKeyRef:
                  name: ccm-linode
                  key: region
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
      volumes:
      - name: k8s
        hostPath:
          path: /etc/kubernetes
